ext.javaLibraries = [
    'data-sets-api-server',
    'data-sets-model',
    'data-sets-tests',
    'data-sets-zowe-server-package'
]

// Save this in case we make a packaging subproject 
// ext.serviceJars = [ 'zowe-package' ]
ext.projectsToPublish = ext.javaLibraries
ext.publishTasksList = projectsToPublish.collect { ":" + it + ":publish" }


configure(subprojects.findAll { it.name in projectsToPublish }) {
    apply plugin: "maven"
    apply plugin: 'maven-publish'

    publishing {
        repositories.maven {
            credentials {
                username project.hasProperty("deploy.username") ? project.getProperty("deploy.username") : mavenPublishUser
                password  project.hasProperty("deploy.password") ? project.getProperty("deploy.password") : mavenPublishPassword
            }
            if (rootProject.version.endsWith("-SNAPSHOT")) {
                setUrl(artifactoryPublishingMavenSnapshotRepo)
            } else {
                setUrl(artifactoryPublishingMavenRepo)
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.zowe.explorer.datasets'
                version rootProject.version
                artifactId "${project.name}"
                from components.java
                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each { it.scope*.value = 'compile' }
                }
            }
        }
    }

    tasks.withType(Jar) {
        manifest {
            attributes "Specification-Title": project.name
            attributes "Specification-Version": rootProject.version
            attributes "Specification-Vendor": "Zowe Open Source Project"

            attributes "Implementation-Title": project.name
            attributes "Implementation-Version": rootProject.version
            attributes "Implementation-Vendor": "Zowe Open Source Project"
            attributes "Implementation-Vendor-Id": "org.zowe"
        }
    }

}

//noinspection GroovyAssignabilityCheck
task publishArtifacts {
    group 'Zowe Publishing'
    description 'Publish data-sets-api-server libraries to Zowe Artifactory'
    doLast {
        println 'Publish data-sets-api-server libraries to Zowe Artifactory'
    }
}

publishArtifacts.dependsOn publishTasksList