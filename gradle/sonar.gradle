apply plugin: "org.sonarqube"

ext.pullRequest = System.getenv()['CHANGE_ID'] ?: null

sonarqube {
    properties {
        property "sonar.host.url", project.getProperty('sonar.host.url')
        property "sonar.login", project.hasProperty('sonar.login') ? project.getProperty('sonar.login') : null
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "explorer:data-sets-api-server"
        property "sonar.projectName", "Zowe Explorer Data Sets APIs"
        property "sonar.projectVersion", project.version
        property "sonar.language", "java"
        property "sonar.links.scm", "https://github.com/zowe/data-sets"
        property "sonar.links.scm_dev", "https://github.com/zowe/data-sets.git"
        property "sonar.links.ci", project.hasProperty('sonar.links.ci') ? project.getProperty('sonar.links.ci') : null
        if (pullRequest != null) {
            property "sonar.analysis.mode", "preview"
            property "sonar.github.pullRequest", pullRequest
            property "sonar.github.repository", "zowe/data-sets"
            property "sonar.github.oauth",  project.hasProperty('sonar.github.oauth') ? project.getProperty('sonar.github.oauth') : null
        }
    }
}

subprojects {
    sonarqube {
        properties {
            property "sonar.sources", "src/main/java"
            property "sonar.tests", "src/test/java"
        }
    }
}

// Packaging project; sonar does not apply
project(":data-sets-zowe-server-package") {
    sonarqube {
        skipProject = true
    }
}
